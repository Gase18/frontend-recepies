{"version":3,"sources":["serviceWorker.js","RamenChicken.js","RamenPork.js","RamenGarlic.js","RamenRecipeData.js","RamenIngredientData.js","RamenStart.js","RamenHeader.js","RamenFooter.js","index.js","RamenNavigate.js"],"names":["Boolean","window","location","hostname","match","RamenChicken","props","className","rData2","name","rel","src","iData2","map","data","amount","instruction","placeholder","RamenPork","rData","iData","RamenGarlic","rData3","iData3","url","getRecipeData","a","fetch","method","result","ok","json","Error","getRecipeData2","getRecipeData3","getIngredientData","getIngredientData2","getIngredientData3","RamenStart","setrData","setiData","navigate","onClick","RamenHeader","href","RamenFooter","ReactDOM","render","React","useState","pageId","setPageId","undefined","currentrData","settCurrentrData","currentiData","settCurrentiData","id","CurrentPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wKAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gBCbC,SAASC,EAAaC,GAEzB,OAAO,yBAAKC,UAAU,gBAClB,4BAAKD,EAAME,OAAOC,MAClB,4BAAI,uBAAGC,IAAI,SAAQ,yBAAKC,IAAI,2BAC5B,8CACCL,EAAMM,QAASN,EAAMM,OAAOC,KAAI,SAAAC,GAAI,OAAI,iCAAOA,EAAKL,KAAZ,MAAqBK,EAAKC,WAGnE,8CACCT,EAAME,QAAS,mCAASF,EAAME,OAAOQ,aACtC,8BAAUT,UAAU,eAAeU,YAAY,uBCZhD,SAASC,EAAUZ,GACtB,OAAO,yBAAKC,UAAU,aAClB,4BAAKD,EAAMa,MAAMV,MACjB,4BAAI,uBAAGC,IAAI,SAAQ,yBAAKC,IAAI,wBAC5B,8CACCL,EAAMc,OAAQd,EAAMc,MAAMP,KAAI,SAAAC,GAAI,OAAI,iCAAOA,EAAKL,KAAZ,MAAqBK,EAAKC,WAEjE,8CACCT,EAAMa,OAAQ,mCAASb,EAAMa,MAAMH,aACpC,8BAAUT,UAAU,eAAeU,YAAY,uBCThD,SAASI,EAAYf,GACxB,OAAO,yBAAKC,UAAU,eAClB,4BAAKD,EAAMgB,OAAOb,MAClB,4BAAI,uBAAGC,IAAI,SAAQ,yBAAKC,IAAI,iCAC5B,8CACCL,EAAMiB,QAASjB,EAAMiB,OAAOV,KAAI,SAAAC,GAAI,OAAI,iCAAOA,EAAKL,KAAZ,MAAqBK,EAAKC,WAEnE,8CACCT,EAAMgB,QAAS,mCAAShB,EAAMgB,OAAON,aAEtC,8BAAUT,UAAU,eAAeU,YAAY,uB,2BCXnDO,EAAM,0BACH,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACcC,MAAMH,EAAM,YAAa,CAC1CI,OAAQ,QAFL,YACDC,EADC,QAUMC,GAVN,iCAWgBD,EAAOE,OAXvB,cAWGjB,EAXH,gBAYUA,EAZV,sDAcC,IAAIkB,MAAM,yBAdX,6C,sBAkBA,SAAeC,IAAtB,+B,4CAAO,8BAAAP,EAAA,sEACcC,MAAMH,EAAM,YAAa,CAC1CI,OAAQ,QAFL,YACDC,EADC,QAUMC,GAVN,iCAWgBD,EAAOE,OAXvB,cAWGjB,EAXH,gBAYUA,EAZV,sDAcC,IAAIkB,MAAM,yBAdX,6C,sBAkBA,SAAeE,IAAtB,+B,4CAAO,8BAAAR,EAAA,sEACcC,MAAMH,EAAM,YAAa,CAC1CI,OAAQ,QAFL,YACDC,EADC,QAUMC,GAVN,iCAWgBD,EAAOE,OAXvB,cAWGjB,EAXH,gBAYUA,EAZV,sDAcC,IAAIkB,MAAM,yBAdX,6C,sBCpCA,SAAeG,IAAtB,+B,4CAAO,8BAAAT,EAAA,sEACgBC,MAAMH,mDAAmC,CACxDI,OAAQ,QAFT,YACCC,EADD,QAWQC,GAXR,iCAYoBD,EAAOE,OAZ3B,cAYOjB,EAZP,gBAacA,EAbd,sDAeG,IAAIkB,MAAM,yBAfb,6C,sBAkBA,SAAeI,IAAtB,+B,4CAAO,8BAAAV,EAAA,sEACgBC,MAAMH,mDAAmC,CACxDI,OAAQ,QAFT,YACCC,EADD,QAWQC,GAXR,iCAYoBD,EAAOE,OAZ3B,cAYOjB,EAZP,gBAacA,EAbd,sDAeG,IAAIkB,MAAM,yBAfb,6C,sBAkBA,SAAeK,IAAtB,+B,4CAAO,8BAAAX,EAAA,sEACgBC,MAAMH,mDAAmC,CACxDI,OAAQ,QAFT,YACCC,EADD,QAWQC,GAXR,iCAYoBD,EAAOE,OAZ3B,cAYOjB,EAZP,gBAacA,EAbd,sDAeG,IAAIkB,MAAM,yBAfb,6C,sBC/BA,SAASM,EAAWhC,GAAO,4CAE9B,8BAAAoB,EAAA,sEACwBS,IADxB,cACUf,EADV,gBAEwBK,IAFxB,OAEUN,EAFV,OAGIb,EAAMiC,SAASpB,GACfb,EAAMkC,SAASpB,GACfd,EAAMmC,SAAS,GALnB,4CAF8B,kEAU9B,8BAAAf,EAAA,sEACwBU,IADxB,cACUhB,EADV,gBAEwBa,IAFxB,OAEUd,EAFV,OAGIb,EAAMiC,SAASpB,GACfb,EAAMkC,SAASpB,GACfd,EAAMmC,SAAS,GALnB,4CAV8B,kEAmB9B,8BAAAf,EAAA,sEACwBW,IADxB,cACUjB,EADV,gBAEwBc,IAFxB,OAEUf,EAFV,OAGIb,EAAMiC,SAASpB,GACfb,EAAMkC,SAASpB,GACfd,EAAMmC,SAAS,GALnB,4CAnB8B,sBA2B9B,OAAO,yBAAKlC,UAAU,cAClB,4BAAI,uBAAGG,IAAI,SAAQ,yBAAKC,IAAI,oBAAoB+B,QA5BrB,WAAD,oCA6B1B,4BAAI,uBAAGhC,IAAI,SAAQ,yBAAKC,IAAI,uBAAuB+B,QA7BzB,+CA8B1B,4BAAI,uBAAGhC,IAAI,SAAQ,yBAAKC,IAAI,6BAA6B+B,QA9B/B,gDCL3B,SAASC,EAAYrC,GACxB,OAAO,yBAAKC,UAAU,eAClB,4BAAI,uBAAGqC,KAAK,yBAAR,mBCFL,SAASC,EAAYvC,GACxB,OAAO,yBAAKC,UAAU,eAAf,cCGXuC,IAASC,OAAO,mBCET,SAAuBzC,GAAQ,IAAD,EACL0C,IAAMC,SAAS,GADV,mBAC1BC,EAD0B,KAClBC,EADkB,OAEQH,IAAMC,cAASG,GAFvB,mBAE1BC,EAF0B,KAEZC,EAFY,OAGQN,IAAMC,cAASG,GAHvB,mBAG1BG,EAH0B,KAGZC,EAHY,KAKjC,SAASf,EAASgB,GACdN,EAAUM,GAGd,IAAIC,EAAc,KAWlB,OAVe,IAAXR,EAEAQ,EAAc,kBAACpB,EAAD,CAAYG,SAAUA,EAAUF,SAAUe,EAAkBd,SAAUgB,IAClE,IAAXN,EACPQ,EAAc,kBAACxC,EAAD,CAAWuB,SAAUA,EAAUtB,MAAOkC,EAAcjC,MAAOmC,IACvD,IAAXL,EACPQ,EAAc,kBAACrD,EAAD,CAAcoC,SAAUA,EAAUjC,OAAQ6C,EAAczC,OAAQ2C,IAC5D,IAAXL,IACPQ,EAAc,kBAACrC,EAAD,CAAaoB,SAAUA,EAAUnB,OAAQ+B,EAAc9B,OAAQgC,KAE1E,6BAAK,kBAACZ,EAAD,MAAgBe,EAAY,kBAACb,EAAD,SDtB5B,MAAkBc,SAASC,eAAe,ST2HpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.546fd045.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\n\r\n\r\nexport function RamenChicken(props) {\r\n    \r\n    return <div className=\"RamenChicken\">\r\n        <h1>{props.rData2.name}</h1>\r\n        <li><a rel=\"group\"><img src=\"img/ChickenRamen.jpg\" /></a></li>\r\n        <h3>Ingredients:</h3>\r\n        {props.iData2 ? props.iData2.map(data => <div> {data.name} : {data.amount}</div>) : false}\r\n\r\n\r\n        <h3>Instructions</h3>\r\n        {props.rData2 ? <div>   {props.rData2.instruction}</div> : false}\r\n        <textarea className=\"comment-area\" placeholder=\"Comment on recipe\"></textarea>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\n\r\nexport function RamenPork(props) {\r\n    return <div className=\"RamenPork\">\r\n        <h1>{props.rData.name}</h1>\r\n        <li><a rel=\"group\"><img src=\"img/PorkRamen.jpg\" /></a></li>\r\n        <h3>Ingredients:</h3>\r\n        {props.iData ? props.iData.map(data => <div> {data.name} : {data.amount}</div>) : false}\r\n\r\n        <h3>Instructions</h3>\r\n        {props.rData ? <div>   {props.rData.instruction}</div> : false}\r\n        <textarea className=\"comment-area\" placeholder=\"Comment on recipe\"></textarea>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\n\r\nexport function RamenGarlic(props) {\r\n    return <div className=\"RamenGarlic\">\r\n        <h1>{props.rData3.name}</h1>\r\n        <li><a rel=\"group\"><img src=\"img/spicy-garlic-ramen.jpg\" /></a></li>\r\n        <h3>Ingredients:</h3>\r\n        {props.iData3 ? props.iData3.map(data => <div> {data.name} : {data.amount}</div>) : false}\r\n\r\n        <h3>Instructions</h3>\r\n        {props.rData3 ? <div>   {props.rData3.instruction}</div> : false}\r\n\r\n        <textarea className=\"comment-area\" placeholder=\"Comment on recipe\"></textarea>\r\n   </div>\r\n}\r\n","/**\r\n * Get data from database\r\n */\r\nlet url = \"/RamenRecipes/resources\";\r\nexport async function getRecipeData() {\r\n  let result = await fetch(url + \"/recipe/1\", {\r\n    method: \"GET\"\r\n\r\n  });\r\n\r\n\r\n  /**\r\n   * extra data\r\n   * */\r\n  if (result.ok) {\r\n    const data = await result.json();\r\n    return await data;\r\n  }\r\n  throw new Error(\"Could not fetch data!\");\r\n}\r\n\r\n\r\nexport async function getRecipeData2() {\r\n  let result = await fetch(url + \"/recipe/2\", {\r\n    method: \"GET\"\r\n\r\n  });\r\n\r\n\r\n  /**\r\n   * extra data\r\n   * */\r\n  if (result.ok) {\r\n    const data = await result.json();\r\n    return await data;\r\n  }\r\n  throw new Error(\"Could not fetch data!\");\r\n}\r\n\r\n\r\nexport async function getRecipeData3() {\r\n  let result = await fetch(url + \"/recipe/3\", {\r\n    method: \"GET\"\r\n\r\n  });\r\n\r\n\r\n  /**\r\n   * extra data\r\n   * */\r\n  if (result.ok) {\r\n    const data = await result.json();\r\n    return await data;\r\n  }\r\n  throw new Error(\"Could not fetch data!\");\r\n}\r\n\r\n\r\n\r\n","/**\r\n * Get data from database\r\n */\r\nlet url = \"/RamenRecipes/resources\";\r\nexport async function getIngredientData() {\r\n    let result = await fetch(url + \"/recipe_has_ingredients/1\", {\r\n        method: \"GET\"\r\n\r\n    });\r\n\r\n\r\n\r\n    /**\r\n     * extra data\r\n     * */\r\n    if (result.ok) {\r\n        const data = await result.json();\r\n        return await data;\r\n    }\r\n    throw new Error(\"Could not fetch data!\");\r\n}\r\n\r\nexport async function getIngredientData2() {\r\n    let result = await fetch(url + \"/recipe_has_ingredients/2\", {\r\n        method: \"GET\"\r\n\r\n    });\r\n\r\n\r\n\r\n    /**\r\n     * extra data\r\n     * */\r\n    if (result.ok) {\r\n        const data = await result.json();\r\n        return await data;\r\n    }\r\n    throw new Error(\"Could not fetch data!\");\r\n}\r\n\r\nexport async function getIngredientData3() {\r\n    let result = await fetch(url + \"/recipe_has_ingredients/3\", {\r\n        method: \"GET\"\r\n\r\n    });\r\n\r\n\r\n\r\n    /**\r\n     * extra data\r\n     * */\r\n    if (result.ok) {\r\n        const data = await result.json();\r\n        return await data;\r\n    }\r\n    throw new Error(\"Could not fetch data!\");\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { getRecipeData, getRecipeData2, getRecipeData3 } from \"./RamenRecipeData\";\r\nimport { getIngredientData, getIngredientData2, getIngredientData3} from \"./RamenIngredientData\";\r\n\r\n\r\n\r\n\r\n\r\nexport function RamenStart(props) {\r\n\r\n    async function gotoRamenPork() {\r\n        const iData = await getIngredientData();\r\n        const rData = await getRecipeData();\r\n        props.setrData(rData);\r\n        props.setiData(iData);\r\n        props.navigate(1);\r\n    }\r\n\r\n    async function gotoRamenchicken() {\r\n        const iData = await getIngredientData2();\r\n        const rData = await getRecipeData2();\r\n        props.setrData(rData);\r\n        props.setiData(iData);\r\n        props.navigate(2);\r\n    }\r\n\r\n\r\n    async function gotoRamenGarlic() {\r\n        const iData = await getIngredientData3();\r\n        const rData = await getRecipeData3();\r\n        props.setrData(rData);\r\n        props.setiData(iData);\r\n        props.navigate(3);\r\n    }\r\n\r\n    return <div className=\"RamenStart\">\r\n        <li><a rel=\"group\"><img src=\"img/PorkRamen.jpg\" onClick={gotoRamenPork}/></a></li>\r\n        <li><a rel=\"group\"><img src=\"img/ChickenRamen.jpg\" onClick={gotoRamenchicken} /></a></li>\r\n        <li><a rel=\"group\"><img src=\"img/spicy-garlic-ramen.jpg\" onClick={gotoRamenGarlic} /></a></li>\r\n    </div>\r\n\r\n}\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\n\r\nexport function RamenHeader(props) {\r\n    return <div className=\"RamenHeader\">\r\n        <h1><a href=\"http://localhost:3000\">Ramen recipes</a></h1>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\n\r\nexport function RamenFooter(props) {\r\n    return <div className=\"RamenFooter\">@Copyright</div>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport\"./index.scss\";\nimport { RamenNavigate } from './RamenNavigate';\n\n\n\nReactDOM.render(<RamenNavigate/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport { RamenChicken } from \"./RamenChicken\";\r\nimport { RamenPork } from \"./RamenPork\";\r\nimport { RamenGarlic } from \"./RamenGarlic\";\r\nimport { RamenStart } from \"./RamenStart\";\r\nimport { RamenHeader } from \"./RamenHeader\";\r\nimport { RamenFooter } from \"./RamenFooter\";\r\n\r\n\r\nexport function RamenNavigate(props) {\r\n    const [pageId, setPageId] = React.useState(0);\r\n    const [currentrData, settCurrentrData] = React.useState(undefined);\r\n    const [currentiData, settCurrentiData] = React.useState(undefined);\r\n\r\n    function navigate(id) {\r\n        setPageId(id);\r\n    }\r\n\r\n    let CurrentPage = null;\r\n    if (pageId === 0) {\r\n\r\n        CurrentPage = <RamenStart navigate={navigate} setrData={settCurrentrData} setiData={settCurrentiData}/>\r\n    } else if (pageId === 1) {\r\n        CurrentPage = <RamenPork navigate={navigate} rData={currentrData} iData={currentiData}/>\r\n    } else if (pageId === 2) {\r\n        CurrentPage = <RamenChicken navigate={navigate} rData2={currentrData} iData2={currentiData}/>\r\n    } else if (pageId === 3) {\r\n        CurrentPage = <RamenGarlic navigate={navigate} rData3={currentrData} iData3={currentiData}/>\r\n    }\r\n    return <div><RamenHeader />{CurrentPage}<RamenFooter /></div>\r\n}\r\n"],"sourceRoot":""}